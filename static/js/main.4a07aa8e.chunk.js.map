{"version":3,"sources":["components/navbar.jsx","services/httpServices.js","services/moviesServices.js","services/genresServices.js","components/common/pagination.jsx","components/common/listGenres.jsx","components/common/config.jsx","components/tableHeader.jsx","components/common/likeComponent.jsx","components/tableBody.jsx","components/moviesTable.jsx","components/common/searchbox.jsx","components/movies.jsx","components/customer.jsx","components/rentals.jsx","components/notfound.jsx","components/common/input.jsx","components/common/groupselect.jsx","components/common/form.jsx","components/movieform.jsx","services/authServices.js","components/loginform.jsx","services/userServices.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","user","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Fragment","name","axios","interceptors","response","use","error","status","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","getMovies","http","config","apiEndpoint","getMovie","movieid","deleteMovie","saveMovie","movie","_id","getGenres","Pagination","pagecount","currentpage","onClick","pages","i","push","map","p","key","ListGenres","genres","selectedgenre","genre","style","cursor","colums","path","label","TableHeader","raiseSort","sortpath","order","onSort","renderSortIcon","colum","renderCheckbox","onChange","onDeleteAll","checked","deleteall","deletedmovies","length","onDeleteMulti","this","color","isAdmin","colSpan","scope","Component","Like","isLike","TableBody","extraColums1","content","value","onCheck","includes","extraColums","onLike","onDelete","filter","c","renderCell","linkto","title","_","movies","MoviesTable","SearchBox","e","currentTarget","placeholder","Movies","state","searchQuery","deletedMovies","loading","handleDelete","a","originalMovies","setState","alert","handleLike","currentMovie","index","indexOf","handlePageChang","paginate","sindex","slice","handleGenreChange","filterMovie","filteringmovies","filtered","toLowerCase","orderBy","handleSort","getPageCount","data","Math","trunc","handleMovieSelected","history","handleSearch","query","handleCheck","m","handelDeleteAll","handleDeleteMulti","setTimeout","allMovies","filteredMovies","totalPage","itemCount","marginTop","marginBottom","itemcount","height","display","alignItems","justifyContent","width","role","Customers","location","Rentals","notFound","Input","rest","htmlFor","GroupSelect","items","disabled","item","Form","styles","maxWidth","margin","validate","Joi","schema","abortEarly","details","message","reduce","obj","handleSubmit","preventDefault","result","errors","Object","keys","doSubmit","validateProperty","input","handleChange","errorMessage","renderButton","renderInput","readonly","readOnly","renderGroupSelect","MovieForm","genreId","numberInStock","dailyRentalRate","any","string","required","number","min","max","match","params","replace","onSubmit","login","email","password","console","log","localStorage","setItem","getCurrentUser","getItem","jwtDecode","LoginForm","username","window","from","pathname","class","padding","listStyleType","register","Register","Logout","removeItem","ProtectedRoute","component","render","App","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4a07aa8e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = props => {\r\n    const {user} = props;\r\n    return ( \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n        <a className=\"navbar-brand\" href=\"#\">Vidly</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n            <div className=\"navbar-nav\">\r\n                <Link className=\"nav-item nav-link\" to =\"/movies\">Movies</Link>\r\n                {user&&\r\n                <React.Fragment>\r\n\r\n                    <Link className=\"nav-item nav-link\" to =\"/customers\">Customers</Link>\r\n                    <Link className = 'nav-item nav-link' to='rentals'>Rentals</Link>\r\n                </React.Fragment>\r\n                }\r\n                {user&&\r\n                <React.Fragment>\r\n                <Link className=\"nav-item nav-link\" to =\"/profile\">{user.name}</Link>\r\n                <Link className=\"nav-item nav-link\" to =\"/logout\">Logout</Link>\r\n                </React.Fragment>}\r\n                {(!user)&&\r\n                <React.Fragment>\r\n                <Link className=\"nav-item nav-link\" to =\"/login\">Login</Link>\r\n                <Link className=\"nav-item nav-link\" to =\"/register\">Register</Link>\r\n                </React.Fragment>}\r\n            </div>\r\n        </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default NavBar;","import axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\n\r\naxios.interceptors.response.use(null, error=>{\r\n    const ex = error.response&&\r\n    error.response.status>=400&& \r\n    error.response.status<500;\r\n    if(!ex){\r\n      toast.error('unexpected error occured');\r\n    }\r\n    return Promise.reject(error);\r\n  \r\n  })\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n}","import http from './httpServices';\r\nimport config from '../config/config.json';\r\n\r\nexport const getMovies=  ()=>{\r\n    return  http.get(config.apiEndpoint+'movies');\r\n}\r\nexport const getMovie = movieid =>{\r\n    return http.get(config.apiEndpoint+'movies/'+ movieid);\r\n}\r\nexport const deleteMovie= movieid =>{\r\n    return http.delete(config.apiEndpoint +'movies/'+ movieid);\r\n}\r\nexport const saveMovie = movie=>{\r\n    const movieid = movie._id;\r\n    delete movie._id;\r\n    if(movieid!=='') {\r\n        return http.put(config.apiEndpoint+'movies/'+movieid, movie);\r\n    }\r\n    return http.post(config.apiEndpoint + 'movies', movie);\r\n\r\n}","import http from './httpServices';\r\nimport config from '../config/config.json';\r\n\r\nexport default function getGenres() {\r\n    return http.get(config.apiEndpoint+'genres');\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Pagination = ({pagecount,currentpage,onClick}) => {\r\n    if (pagecount ===1) return null;\r\n    const pages = [];\r\n    for(let i = 0; i<pagecount; i++) pages.push(i+1);\r\n    return (\r\n        <nav aria-label=\"...\">\r\n        <ul className=\"pagination\">\r\n            {pages.map(p =><li \r\n            onClick = {()=>onClick(p)} \r\n            key = {p} \r\n            className = {p===currentpage?\r\n            'page-item active':'page-item'}>\r\n                <a className=\"page-link\">{p}</a></li>)}\r\n        </ul>\r\n        </nav>\r\n      );\r\n}\r\nPagination.propTypes={\r\n    pagecount: PropTypes.number.isRequired,\r\n    currentpage: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\nexport default Pagination;","import React from 'react';\r\n\r\nconst ListGenres = props=>{\r\n    const {genres, selectedgenre, onClick} = props;\r\n    return(\r\n        <ul className=\"list-group\">\r\n            {genres.map(genre=> \r\n            <li \r\n            key = {genre._id}\r\n            onClick = {()=>onClick(genre)} \r\n            style ={{cursor: 'pointer'}}\r\n            className ={genre._id===selectedgenre._id? \r\n            'list-group-item active': 'list-group-item'}>{genre.name}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ListGenres;","export const colums = [\r\n    {key: 'Check'},\r\n    {path: 'title', label: 'Title'},\r\n    {path: 'genre.name', label: 'Genre'},\r\n    {path: 'numberInStock', label: 'Stock'},\r\n    {path: 'dailyRentalRate', label: 'Rate'},\r\n    {key: 'Like'},\r\n    {key: 'Delete'}\r\n\r\n];\r\nexport const movieNumOfPage=6;","import React, { Component } from 'react';\r\nclass TableHeader extends Component {\r\n    raiseSort = path=>{\r\n        let sortpath = {...this.props.sortpath};\r\n        let order = 'asc';\r\n        if(path===sortpath.path) order= sortpath.order==='asc'?'desc':'asc';\r\n        sortpath = {path, order};\r\n         this.props.onSort(sortpath);\r\n    }\r\n    renderSortIcon=colum=>{\r\n        const {sortpath} = this.props;\r\n        if(colum.path!==sortpath.path) return null;\r\n        if(sortpath.order==='asc') return <i className=\"fa fa-sort-asc\"></i>;\r\n        return <i className=\"fa fa-sort-desc\"></i>;\r\n    }\r\n    renderCheckbox = ()=>{\r\n        return <div><input \r\n        onChange = {this.props.onDeleteAll} \r\n        checked = {this.props.deleteall}\r\n        type = 'checkbox'/>{(this.props.deletedmovies.length!==0)\r\n            &&<i onClick = {this.props.onDeleteMulti} className=\"fa fa-trash btn\"></i>}</div>;\r\n    }\r\n    render() { \r\n        const {user} = this.props;\r\n        return ( \r\n            <thead className = 'bg-primary ' style = {{color: 'white'}}>\r\n                {(user&&user.isAdmin)&&<tr className = \"bg-light\"><th colSpan = {this.props.colums.length}>{this.renderCheckbox()}</th></tr>}\r\n                <tr>\r\n                    {this.props.colums.map(\r\n                        colum => <th \r\n                        style = {{cursor:\"pointer\"}} \r\n                        onClick ={()=>this.raiseSort(colum.path)}\r\n                        key = {colum.path||colum.key} \r\n                        scope = 'col'>{colum.label}\r\n                        {this.renderSortIcon(colum)}\r\n                        </th>)}\r\n                </tr>\r\n            </thead>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React from 'react';\r\nconst Like = ({movie,onClick}) => {\r\n    \r\n    return ( \r\n        <React.Fragment>\r\n            <i onClick = {()=>onClick(movie)} className={movie.isLike?\"fa fa-heart btn\":\"fa fa-heart-o btn\"}></i>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default Like;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport Like from './common/likeComponent';\r\nimport * as config from './common/config';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TableBody extends Component {\r\n    user = this.props.user;\r\n    extraColums1 = {\r\n        key: 'Checkbox',\r\n        content: movie => this.user&&this.user.isAdmin?\r\n        <input \r\n        value = {movie._id}\r\n        onChange = {this.props.onCheck} \r\n        type = 'checkbox' \r\n        checked = {this.props.deletedmovies.includes(movie._id)?true:false}/>\r\n        : null\r\n    }\r\n    extraColums = [\r\n        {key: 'Like', \r\n        content: movie=> \r\n        <Like onClick = {this.props.onLike} \r\n        movie = {movie}/>},\r\n        {key: 'Delete', \r\n        content: movie=> this.user&&this.user.isAdmin?\r\n        <button \r\n        onClick = {()=>this.props.onDelete(movie._id)} \r\n        className = 'btn btn-danger'>Delete</button>\r\n        :null}\r\n    ];\r\n    colums = [{...this.extraColums1},\r\n        ...config.colums\r\n        .filter(c=>c.path),\r\n        ...this.extraColums];\r\n    \r\n    renderCell=(movie, colum)=>{\r\n        if(colum.path) {\r\n            if(colum.path === 'title') {\r\n                const linkto = '/movies/'+movie._id;\r\n                return <Link to = {linkto}>{movie.title}</Link>}\r\n            return _.get(movie, colum.path)};\r\n        if(colum.content) {\r\n            return colum.content(movie)};\r\n\r\n    }\r\n\r\n    render() { \r\n        const {movies} = this.props;\r\n        return ( \r\n            <tbody>\r\n                {movies.map(movie =>\r\n                    <tr key = {movie._id}> \r\n                        {this.colums.map(colum=>\r\n                            <td key = {movie._id+(colum.path||colum.key)}>{this.renderCell(movie, colum)}</td>\r\n                            )}\r\n                    </tr>)}\r\n            </tbody>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport * as config from './common/config';\r\nimport TableBody from './tableBody';\r\n\r\nconst MoviesTable =props=> {\r\n    const { movies,onDelete, onLike, onSort, sortpath, onCheck, deletedmovies, deleteall, onDeleteAll, onDeleteMulti, user} = props;\r\n        return ( \r\n            <table className=\"table table-striped\">\r\n                <TableHeader\r\n                colums = {config.colums}\r\n                onSort = {onSort}\r\n                sortpath = {sortpath} \r\n                deletedmovies = {deletedmovies}\r\n                onDeleteAll = {onDeleteAll}\r\n                deleteall = {deleteall}\r\n                onDeleteMulti = {onDeleteMulti}\r\n                user = {user}\r\n                /> \r\n\r\n                <TableBody\r\n                movies = {movies}\r\n                onDelete = {onDelete}\r\n                onLike = {onLike}\r\n                onCheck = {onCheck}\r\n                deleteall = {deleteall}\r\n                deletedmovies = {deletedmovies}\r\n                user = {user}\r\n                    />\r\n            </table>\r\n         );        \r\n}\r\n \r\nexport default MoviesTable;\r\n","import React, { Component } from 'react';\r\n\r\nclass SearchBox extends Component {\r\n    render() { \r\n        const {value, onChange} = this.props;\r\n        return ( \r\n            <input \r\n            type=\"text\" \r\n            value = {value}\r\n            onChange = {e=>onChange(e.currentTarget.value)}\r\n            placeholder = 'Search...'\r\n            className=\"form-control my-3\"/>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { deleteMovie, getMovies } from '../services/moviesServices';\r\nimport getGenres from '../services/genresServices';\r\nimport Pagination from './common/pagination';\r\nimport ListGenres from './common/listGenres';\r\nimport * as config from './common/config';\r\nimport MoviesTable from './moviesTable';\r\nimport SearchBox from './common/searchbox';\r\n\r\nclass Movies extends Component {\r\n    state = { movies:[],\r\n            genres: [],\r\n            selectedgenre:{name: \"All Genres\" },\r\n            currentpage: 1,\r\n            sortpath: {path: 'title', order: 'asc'},\r\n            searchQuery: '',\r\n            deletedMovies: [],\r\n            deleteall: false,\r\n            loading: true};\r\n            \r\n\r\n    async componentDidMount(){\r\n        const {data: movies} = await getMovies();\r\n        const {data} = await getGenres();\r\n        this.setState({movies, genres: [{_id: '', name: 'All Genres'},...data]});\r\n        setTimeout(() => {\r\n            this.setState({loading:false})\r\n        }, 10000);\r\n    }\r\n    handleDelete = async movieid=>{\r\n        const originalMovies = this.state.movies;\r\n        const movies = originalMovies.filter(movie => movie._id!== movieid);\r\n        this.setState({movies});\r\n        try{\r\n\r\n            await deleteMovie(movieid);\r\n        }catch(ex)\r\n        {\r\n            if(ex.response&&ex.response.status===404) alert('The movie has been deleted');\r\n            this.setState({movies: originalMovies});\r\n        }\r\n    }\r\n    handleLike = movie =>{\r\n        const currentMovie ={...movie, isLike: !movie.isLike};\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = {...currentMovie};\r\n        this.setState({movies});\r\n    }\r\n    handlePageChang = currentpage=>{\r\n        this.setState({currentpage});\r\n    }\r\n    paginate=(movies,currentpage)=>{\r\n        const sindex = config.movieNumOfPage*(currentpage-1);\r\n        return movies.slice(sindex, sindex+config.movieNumOfPage);\r\n     \r\n    }\r\n    handleGenreChange = genre=>{\r\n        this.setState({selectedgenre: genre, searchQuery: \"\", currentpage: 1, sortpath: {path: 'title', order: 'asc'}});\r\n    }\r\n    filterMovie=()=>{\r\n        const {movies: filteringmovies, selectedgenre: genre, sortpath} = this.state;\r\n        const {path, order} = sortpath;\r\n        const {searchQuery} = this.state;\r\n        const filtered = searchQuery? \r\n        filteringmovies.filter(movie => \r\n            movie.title.toLowerCase()\r\n            .includes(searchQuery.toLowerCase())) : filteringmovies;\r\n        \r\n        if(!genre._id) return _.orderBy(filtered,[path],[order])\r\n        \r\n        return _.orderBy(\r\n            filtered\r\n            .filter(movie => movie.genre._id === genre._id ),\r\n            [path],\r\n            [order]);\r\n    }\r\n    handleSort=sortpath=>{\r\n        this.setState({sortpath})\r\n    }\r\n\r\n    getPageCount= data=>{\r\n        return data.length%config.movieNumOfPage!==0? \r\n        Math.trunc(data.length/config.movieNumOfPage) + 1 \r\n        :data.length/config.movieNumOfPage ;\r\n    }\r\n    handleMovieSelected=movieid=>{\r\n        this.props.history.push('/movies/' + movieid);\r\n    }\r\n    handleSearch = query=>{\r\n        this.setState({searchQuery: query, selectedgenre: {name: \"All Genres\" }, currentpage: 1});\r\n\r\n    }\r\n    handleCheck = ({currentTarget})=>{\r\n        let deletedMovies = [...this.state.deletedMovies];\r\n        if(currentTarget.checked) {\r\n            deletedMovies.push(currentTarget.value);\r\n        }else {\r\n               deletedMovies = deletedMovies.filter(m=>m !== currentTarget.value);\r\n               this.setState({deleteall: false})\r\n        }\r\n        this.setState({deletedMovies});\r\n    }\r\n    handelDeleteAll= async ({currentTarget})=>{\r\n        let deletedMovies = [];\r\n        const deleteall = currentTarget.checked;\r\n        const {data} = await getMovies();\r\n        if(deleteall) deletedMovies = data.map(m => m._id)\r\n        this.setState({deleteall, deletedMovies});\r\n    }\r\n    handleDeleteMulti = ()=>{\r\n        let movies = [...this.state.movies];\r\n        const deletedMovies = [...this.state.deletedMovies];\r\n        movies = movies.filter(m =>!deletedMovies.includes(m._id));\r\n        this.setState({movies, deletedMovies: []});\r\n\r\n    }\r\n\r\n    render() { \r\n        const {movies: allMovies, currentpage, genres, selectedgenre, sortpath, searchQuery, deletedMovies, deleteall,loading} = this.state;\r\n        const filteredMovies = this.filterMovie(allMovies, selectedgenre, sortpath);\r\n        const totalPage = this.getPageCount(filteredMovies);\r\n        const itemCount = filteredMovies.length;\r\n        const movies = this.paginate(filteredMovies,currentpage);\r\n        const {user} = this.props;\r\n\r\n        return ( \r\n\r\n                (allMovies.length===0||genres.length===0)&&loading?\r\n\r\n                <div style = {{ height:'100vh', display: 'flex', alignItems: 'center', justifyContent: 'center'}} >\r\n                <div className=\"spinner-border text-primary \" style = {{width: '4rem', height: '4rem'}} role=\"status\" >\r\n                <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                </div>\r\n\r\n                :<div className=\"row\">\r\n                <div className=\"col-md-2 my-3\">\r\n                    <ListGenres \r\n                    genres = {genres}\r\n                    selectedgenre = {selectedgenre}\r\n                    onClick = {this.handleGenreChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col\">\r\n                {user&&<Link to = '/movies/new' className = 'btn btn-primary' style = {{marginTop: '20px', marginBottom: '20px'}}>New Movie</Link>}\r\n                {itemCount===0?<p>There are no movies in database</p>:<p>Showing {itemCount} movie(s) in database</p>}\r\n                <SearchBox \r\n                value = {searchQuery}\r\n                onChange = {this.handleSearch}/>\r\n                {(itemCount!==0)&&<MoviesTable \r\n                itemcount = {itemCount}\r\n                movies = {movies}\r\n                onDelete = {this.handleDelete}\r\n                onLike = {this.handleLike}\r\n                onSort = {this.handleSort}\r\n                sortpath = {sortpath}\r\n                onCheck = {this.handleCheck}\r\n                deletedmovies = {deletedMovies}\r\n                onDeleteAll = {this.handelDeleteAll}\r\n                deleteall = {deleteall}\r\n                onDeleteMulti = {this.handleDeleteMulti}\r\n                user = {user}\r\n                />}\r\n            \r\n                {(itemCount!==0)&&<Pagination \r\n                pagecount = {totalPage}\r\n                currentpage = {currentpage}\r\n                onClick = {this.handlePageChang}\r\n                />}\r\n            </div>\r\n                </div>\r\n\r\n         );\r\n    }\r\n}\r\n\r\nexport default Movies;","import React from 'react';\r\n\r\nconst Customers = ({history, location}) => {\r\n\r\n    return ( \r\n        <div className=\"content\">\r\n            <h1>Customers</h1>\r\n            <button onClick = {()=>history.push('/movies')} className = 'btn btn-primary'>return</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Customers;","import React from 'react';\r\n\r\nconst Rentals = props => {\r\n    return ( \r\n        <div className=\"content\">\r\n            <h1>Rentals</h1>\r\n            <button onClick = {()=>props.history.push('/movies')} className = 'btn btn-primary'>return</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Rentals;","import React from 'react';\r\n\r\nconst notFound = props => {\r\n    return ( \r\n        <div className=\"content\">\r\n            <h1>Not Found</h1>\r\n            <button onClick ={()=> props.history.push('/movies')} className=\"btn btn-primary\">Return</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default notFound;","import React from 'react';\r\n\r\nconst Input = ({name, label, error, ...rest}) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n            name = {name}\r\n            id = {name}\r\n            {...rest}\r\n            className=\"form-control\"/>\r\n            {error&&<div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Input;","import React from 'react';\r\n\r\nconst GroupSelect = ({items, label, error, onChange, disabled, ...rest}) => {\r\n    return ( \r\n        \r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"inputGroupSelect\">{label}</label>\r\n        <select \r\n        className=\"custom-select\" \r\n        id=\"inputGroupSelect\"\r\n        onChange = {onChange}\r\n        disabled = {disabled}\r\n        {...rest}>\r\n            <option value=''>Choose...</option>\r\n            {items.map(item=> <option\r\n            key = {item._id}\r\n            value = {item._id}\r\n            >{item.name}</option>)}\r\n        </select>\r\n        {error&& <div className=\"alert alert-danger\">{error}</div> }\r\n        </div>        \r\n     );\r\n}\r\n \r\nexport default GroupSelect;","import React, {Component} from 'react';\r\nimport Input from './input';\r\nimport Joi from 'joi-browser';\r\nimport GroupSelect from './groupselect';\r\n\r\nclass Form extends Component {\r\n    state = {  }\r\n    styles = {\r\n        maxWidth: \"400px\", \r\n        margin: \"auto\"};\r\n    validate = ()=>{\r\n        const data = {...this.state.data};\r\n        const option = {abortEarly: false};\r\n        const {error} = Joi.validate(data, this.schema, option);\r\n        if(error)\r\n        return error.details\r\n                .map(e=> ({[e.path[0]]:e.message}))\r\n                .reduce((obj, e)=> ({...obj, ...e}));\r\n        else\r\n            return null;\r\n    }\r\n    handleSubmit= e=>{\r\n        e.preventDefault();\r\n        const result = this.validate();\r\n        const errors = !result?{}:result;\r\n        this.setState({errors}); \r\n        if (Object.keys(errors).length!==0) return;\r\n        this.doSubmit();\r\n    }\r\n    validateProperty = input=> {\r\n        const {name, value} = input;\r\n        const obj = {[name]: value};\r\n        const schema = {[name]: this.schema[name]};\r\n        const {error} = Joi.validate(obj, schema);\r\n        return error? error.details[0].message : null;\r\n    }\r\n    handleChange = ({currentTarget: input})=>{\r\n        const errors = {...this.state.errors};\r\n        const {name} = input;\r\n        const errorMessage = this.validateProperty(input);\r\n        if(errorMessage) errors[name] = errorMessage\r\n        else delete errors[name];\r\n\r\n        const data = {...this.state.data};\r\n        data[input.name] = input.value;\r\n        this.setState({data, errors});\r\n    }\r\n    renderButton = label=>{\r\n        return <button \r\n            disabled = {this.validate()} \r\n            className=\"btn btn-primary\">{label}</button>\r\n    }\r\n    renderInput =(name, label, type = 'text', readonly = false)=>{\r\n        const {data, errors} = this.state;\r\n        return <Input \r\n        type = {type}\r\n        name = {name}\r\n        value = {data[name]}\r\n        label = {label}\r\n        onChange = {this.handleChange}\r\n        error = {errors[name]}\r\n        readOnly = {readonly}\r\n        />\r\n    }\r\n    renderGroupSelect = (items, name, label, disabled) =>{\r\n        return <GroupSelect \r\n        items = {items}\r\n        name = {name}\r\n        label = {label}\r\n        value = {this.state.data[name]}\r\n        error= {this.state.errors[name]}\r\n        onChange = {this.handleChange}\r\n        disabled = {disabled}\r\n        />\r\n    }\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport Form from './common/form';\r\nimport {getMovie, saveMovie} from '../services/moviesServices';\r\nimport Joi from 'joi-browser';\r\nimport getGenres from '../services/genresServices';\r\n\r\n\r\nclass MovieForm extends Form {\r\n    state = {\r\n        data:{\r\n            _id: '',\r\n            title: '',\r\n            genreId: '',\r\n            numberInStock: '',\r\n            dailyRentalRate: ''\r\n        },\r\n        errors: {},\r\n    }\r\n    schema = {\r\n        _id: Joi.any(),\r\n        title:Joi.string().required().label('Title'),\r\n        genreId:Joi.string().required().label('Genre'),\r\n        numberInStock:Joi.number().min(0).required().label('Stock'),\r\n        dailyRentalRate:Joi.number().min(1).max(10).required().label('Rate'),\r\n    }\r\n    genres = [];\r\n    doSubmit=async ()=>{\r\n        try {\r\n            await saveMovie(this.state.data);\r\n            this.props.history.push('/movies');\r\n        }catch(ex)\r\n        {\r\n            if(ex.response && (ex.response.status>=400&&ex.response.status<500)) alert('something wrong');\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        const {movieid} = this.props.match.params;\r\n        const {data: result} = await getGenres();\r\n        this.genres = result;\r\n        if(movieid) {\r\n            const {data:result} = {...await getMovie(movieid)};\r\n            let data = {...result};\r\n            if(Object.keys(data).length===0) return this.props.history.replace('/notfound'); \r\n            data.genreId = data.genre._id;\r\n            delete data.genre;\r\n            this.setState({data });\r\n        }\r\n    }\r\n    render() { \r\n        const {user} = this.props;\r\n        return ( \r\n            <form onSubmit = {this.handleSubmit} style = {this.styles}>\r\n                <h1>Movie Form</h1>\r\n                {this.renderInput('title', 'Title','text',!user)}\r\n                {this.renderGroupSelect(this.genres,'genreId','Genre', !user)}\r\n                {this.renderInput('numberInStock', 'Stock','text',!user)}\r\n                {this.renderInput('dailyRentalRate', 'Rate','text',!user)}\r\n                {user&&this.renderButton('Save')}\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieForm;","import http from './httpServices';\r\nimport config from '../config/config.json';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst tokenKey = 'token';\r\nconst apiEndpoint = config.apiEndpoint + 'auth';\r\nexport async function login(email, password) {\r\n    const {data:jwt} = await http.post(apiEndpoint, {email, password});\r\n    console.log(jwt);\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);\r\n    }catch{}\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(tokenKey);\r\n}\r\nhttp.setJwt(getJwt());","import React from 'react';\r\nimport Form from './common/form';\r\nimport Joi from 'joi-browser';\r\nimport { login, getCurrentUser } from './../services/authServices';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data: {username: '', password: ''},\r\n        errors: {}\r\n    };\r\n    schema = {\r\n        username: Joi.string().required().label('Username'),\r\n        password: Joi.string().required().label('Password')\r\n    };\r\n        \r\n    doSubmit= async ()=>{\r\n        try{\r\n            const {state} = this.props.location;\r\n            const {data} = this.state;\r\n            await login(data.username, data.password);\r\n            window.location = state? state.from.pathname: '/vidly';\r\n        }catch(ex)\r\n        {\r\n            console.log(ex);\r\n            if(ex.response&&ex.response.status===400) {\r\n                const {errors} = this.state;\r\n                errors.username = ex.response.data;\r\n                this.setState({errors});\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        if(getCurrentUser()) return <Redirect to ='/vidly' />\r\n        return ( \r\n            <div>\r\n                <form onSubmit = {this.handleSubmit} style = {this.styles}>\r\n                    <h1>Login</h1>\r\n                    {this.renderInput('username', 'Username')}\r\n                    {this.renderInput('password', 'Password', 'password')}\r\n                    {this.renderButton('Submit')}\r\n                <div class=\"alert alert-light mt-3\" style = {{padding: 0}} role=\"alert\">\r\n                    <li style = {{listStyleType: 'none'}}>admin@jerryliang.co</li>\r\n                    <li style = {{listStyleType: 'none'}}>admin</li>\r\n                </div>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n    \r\n}\r\n \r\nexport default LoginForm;","import http from './httpServices';\r\nimport config from '../config/config.json';\r\n\r\nexport function register(user) {\r\n    return http.post(config.apiEndpoint + 'users', \r\n    {\r\n        email: user.email,\r\n        password: user.password,\r\n        name: user.username\r\n    });\r\n}","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from \"./common/form\";\r\nimport { register } from './../services/userServices';\r\n\r\nclass Register extends Form {\r\n    state = { \r\n        data:{\r\n        email:\"\",\r\n        password: \"\",\r\n        username: \"\"},\r\n        errors: {}\r\n     }\r\n     schema = {\r\n         email: Joi.string().email().required().label('Email'),\r\n         password: Joi.string().min(5).required().label('Password'),\r\n         username: Joi.string().required().label('Username')\r\n     }\r\n     doSubmit = async ()=>{\r\n         try{\r\n             const {headers} = await register(this.state.data);\r\n             localStorage.setItem('token', headers[\"x-auth-token\"]);\r\n             window.location = '/vidly';\r\n         }catch(ex)\r\n         {\r\n             if(ex.response&&ex.response.status===400) {\r\n                 const errors = {...this.state.errors};\r\n                errors.email = ex.response.data;\r\n                this.setState({errors});\r\n             }\r\n         }\r\n     }\r\n    render() { \r\n        return ( \r\n            <form onSubmit = {this.handleSubmit} style = {this.styles}>\r\n                <h1>Register</h1>\r\n                {this.renderInput('email', 'Email')}\r\n                {this.renderInput('password', 'Password')}\r\n                {this.renderInput('username', 'Username')}\r\n                {this.renderButton('Register')}\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Register;","import { Component } from 'react';\r\nimport {logout} from '../services/authServices';\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        logout();\r\n        window.location = '/vidly';\r\n    }\r\n    \r\n    render(){\r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport { getCurrentUser } from './../../services/authServices';\r\n\r\nconst ProtectedRoute = ({component: Component, render, ...rest}) => {\r\n    return ( \r\n        <Route \r\n        {...rest}\r\n        render = {props =>\r\n            {if(!getCurrentUser()) return <Redirect \r\n                to ={{pathname: '/login',\r\n                    state: {from: props.location}\r\n                }} />\r\n            return Component?<Component {...props} user = {getCurrentUser()} />:render(props)\r\n          }\r\n          } />\r\n     );\r\n}\r\n \r\nexport default ProtectedRoute;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport NavBar from './components/navbar';\r\nimport Movies from './components/movies';\r\nimport Customers from './components/customer';\r\nimport Rentals from './components/rentals';\r\nimport notFound from './components/notfound';\r\nimport MovieForm from './components/movieform';\r\nimport LoginForm from './components/loginform';\r\nimport Register from './components/registerForm';\r\nimport Logout from './components/logout';\r\nimport { getCurrentUser } from './services/authServices';\r\nimport ProtectedRoute from './components/common/protectedRoute';\r\n\r\nclass App extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    const user = getCurrentUser();\r\n    this.setState({user});\r\n  }\r\n  render(){\r\n    const {user} = this.state;\r\n  return (\r\n    <div className = 'container'>\r\n        <ToastContainer />\r\n        <NavBar user = {user}/>\r\n      <div className = 'content'>\r\n        <Switch>\r\n          <Route path = '/login' component = {LoginForm} />\r\n          <Route path = '/logout' component = {Logout} />\r\n          <Route path = '/register' component = {Register} />\r\n          <ProtectedRoute path = '/customers' component = {Customers} />\r\n          <ProtectedRoute path = '/rentals' component = {Rentals} />\r\n          <ProtectedRoute path = '/movies/new' component = {MovieForm}/>\r\n          <Route path = '/movies/:movieid' render = {props => <MovieForm {...props} user = {user} />} />\r\n          <Route path = '/movies' render = {props=><Movies {...props} user= {user} />} />\r\n          <Route path = '/vidly' exact render = {props=><Movies {...props} user= {user} />} />\r\n          <Route path = '/' exact render = {props=><Movies {...props} user= {user} />} />\r\n          <Route path = '/notfound' component = {notFound} />\r\n          <Redirect to ='/notfound' />\r\n        </Switch>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}